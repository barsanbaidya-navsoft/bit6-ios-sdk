<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/Bit6Address.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/Bit6Address</TokenIdentifier>
			<Abstract type="html">Bit6Address is used to describe an user identity for calling and messaging.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
            
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/init</TokenIdentifier>
			<Abstract type="html">Unavailable init.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>- (nonnull instancetype)init</Declaration>
			
			<ReturnValue><Abstract type="html">a new instance of the class.</Abstract></ReturnValue>
			<Anchor>//api/name/init</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Bit6Address/addressWithURI:</TokenIdentifier>
			<Abstract type="html">Initializes a Bit6Address object</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>+ (nullable instancetype)addressWithURI:(nonnull NSString *)uri</Declaration>
			<Parameters>
				<Parameter>
					<Name>uri</Name>
					<Abstract type="html">URI string to identify the address. An URI address is a two part string composed by a scheme and a value, separated by a colon. Examples usr:calitb, mailto:bit6@bit6.com .</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a Bit6Address object if succesful or nil if failed.</Abstract></ReturnValue>
			<Anchor>//api/name/addressWithURI:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Bit6Address/addressWithScheme:value:</TokenIdentifier>
			<Abstract type="html">Initializes a Bit6Address object using a scheme and a value. The resulting object URI will become scheme:value .</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>+ (nullable instancetype)addressWithScheme:(nonnull NSString *)scheme value:(nonnull NSString *)value</Declaration>
			<Parameters>
				<Parameter>
					<Name>scheme</Name>
					<Abstract type="html">scheme portion of the URI, for example &quot;usr&quot;, &quot;tel&quot;, &quot;fb&quot;, etc</Abstract>
				</Parameter><Parameter>
					<Name>value</Name>
					<Abstract type="html">value portion of the URI.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a Bit6Address object if succesful or nil if failed.</Abstract></ReturnValue>
			<Anchor>//api/name/addressWithScheme:value:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Bit6Address/addressWithUsername:</TokenIdentifier>
			<Abstract type="html">Initializes a Bit6Address object using an username. The resulting object URI will become usr:username .</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>+ (nullable instancetype)addressWithUsername:(nonnull NSString *)username</Declaration>
			<Parameters>
				<Parameter>
					<Name>username</Name>
					<Abstract type="html">value portion of the username URI.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a Bit6Address object if succesful or nil if failed.</Abstract></ReturnValue>
			<Anchor>//api/name/addressWithUsername:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Bit6Address/addressWithEmail:</TokenIdentifier>
			<Abstract type="html">Initializes a Bit6Address object using an email. The resulting object URI will become mailto:email .</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>+ (nullable instancetype)addressWithEmail:(nonnull NSString *)email</Declaration>
			<Parameters>
				<Parameter>
					<Name>email</Name>
					<Abstract type="html">value portion of the email URI.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a Bit6Address object if succesful or nil if failed.</Abstract></ReturnValue>
			<Anchor>//api/name/addressWithEmail:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Bit6Address/addressWithPhone:</TokenIdentifier>
			<Abstract type="html">Initializes a Bit6Address object using an email. The resulting object URI will become tel:phone .</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>+ (nullable instancetype)addressWithPhone:(nonnull NSString *)phone</Declaration>
			<Parameters>
				<Parameter>
					<Name>phone</Name>
					<Abstract type="html">a valid phone number. It must include the country code, for example +19543308410.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a Bit6Address object if succesful or nil if failed.</Abstract></ReturnValue>
			<Anchor>//api/name/addressWithPhone:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/Bit6Address/addressWithFacebookId:</TokenIdentifier>
			<Abstract type="html">Initializes a Bit6Address object using a Facebook identifier. The resulting object URI will become fb:facebookId .</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>+ (nullable instancetype)addressWithFacebookId:(nonnull NSString *)facebookId</Declaration>
			<Parameters>
				<Parameter>
					<Name>facebookId</Name>
					<Abstract type="html">identifier for a facebook user.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">a Bit6Address object if succesful or nil if failed.</Abstract></ReturnValue>
			<Anchor>//api/name/addressWithFacebookId:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/setUri:</TokenIdentifier>
			<Abstract type="html">returns the URI representation of the sender.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *uri</Declaration>
			
			
			<Anchor>//api/name/uri</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/uri</TokenIdentifier>
			<Abstract type="html">returns the URI representation of the sender.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *uri</Declaration>
			
			
			<Anchor>//api/name/uri</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/Bit6Address/uri</TokenIdentifier>
			<Abstract type="html">returns the URI representation of the sender.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *uri</Declaration>
			
			
			<Anchor>//api/name/uri</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/setScheme:</TokenIdentifier>
			<Abstract type="html">returns the sender&apos;s scheme.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *scheme</Declaration>
			
			
			<Anchor>//api/name/scheme</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/scheme</TokenIdentifier>
			<Abstract type="html">returns the sender&apos;s scheme.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *scheme</Declaration>
			
			
			<Anchor>//api/name/scheme</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/Bit6Address/scheme</TokenIdentifier>
			<Abstract type="html">returns the sender&apos;s scheme.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *scheme</Declaration>
			
			
			<Anchor>//api/name/scheme</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/setValue:</TokenIdentifier>
			<Abstract type="html">returns the sender&apos;s value.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/value</TokenIdentifier>
			<Abstract type="html">returns the sender&apos;s value.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/Bit6Address/value</TokenIdentifier>
			<Abstract type="html">returns the sender&apos;s value.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonnull, nonatomic, readonly) NSString *value</Declaration>
			
			
			<Anchor>//api/name/value</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/setIsGroup:</TokenIdentifier>
			<Abstract type="html">indicates if the sender refers to a group.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isGroup</Declaration>
			
			
			<Anchor>//api/name/isGroup</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/isGroup</TokenIdentifier>
			<Abstract type="html">indicates if the sender refers to a group.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isGroup</Declaration>
			
			
			<Anchor>//api/name/isGroup</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/Bit6Address/isGroup</TokenIdentifier>
			<Abstract type="html">indicates if the sender refers to a group.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL isGroup</Declaration>
			
			
			<Anchor>//api/name/isGroup</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/setSupportsDataStream:</TokenIdentifier>
			<Abstract type="html">indicates whether the sender supports using a data stream.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsDataStream</Declaration>
			
			
			<Anchor>//api/name/supportsDataStream</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/supportsDataStream</TokenIdentifier>
			<Abstract type="html">indicates whether the sender supports using a data stream.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsDataStream</Declaration>
			
			
			<Anchor>//api/name/supportsDataStream</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/Bit6Address/supportsDataStream</TokenIdentifier>
			<Abstract type="html">indicates whether the sender supports using a data stream.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsDataStream</Declaration>
			
			
			<Anchor>//api/name/supportsDataStream</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/setSupportsVideoStream:</TokenIdentifier>
			<Abstract type="html">indicates whether the sender supports using a video stream.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsVideoStream</Declaration>
			
			
			<Anchor>//api/name/supportsVideoStream</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/supportsVideoStream</TokenIdentifier>
			<Abstract type="html">indicates whether the sender supports using a video stream.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsVideoStream</Declaration>
			
			
			<Anchor>//api/name/supportsVideoStream</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/Bit6Address/supportsVideoStream</TokenIdentifier>
			<Abstract type="html">indicates whether the sender supports using a video stream.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsVideoStream</Declaration>
			
			
			<Anchor>//api/name/supportsVideoStream</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/setSupportsMessaging:</TokenIdentifier>
			<Abstract type="html">indicates whether the sender supports sending and receiving messages.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsMessaging</Declaration>
			
			
			<Anchor>//api/name/supportsMessaging</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/supportsMessaging</TokenIdentifier>
			<Abstract type="html">indicates whether the sender supports sending and receiving messages.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsMessaging</Declaration>
			
			
			<Anchor>//api/name/supportsMessaging</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/Bit6Address/supportsMessaging</TokenIdentifier>
			<Abstract type="html">indicates whether the sender supports sending and receiving messages.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) BOOL supportsMessaging</Declaration>
			
			
			<Anchor>//api/name/supportsMessaging</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/Bit6Address/hasScheme:</TokenIdentifier>
			<Abstract type="html">Returns a Boolean value that indicates whether a given scheme matches the sender&apos;s scheme.</Abstract>
			<DeclaredIn>Bit6Address.h</DeclaredIn>
			
			<Declaration>- (BOOL)hasScheme:(nonnull NSString *)aString</Declaration>
			<Parameters>
				<Parameter>
					<Name>aString</Name>
					<Abstract type="html">A string.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if aString matches the URI&apos;s sender, otherwise NO.</Abstract></ReturnValue>
			<Anchor>//api/name/hasScheme:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
        
	</File>
</Tokens>