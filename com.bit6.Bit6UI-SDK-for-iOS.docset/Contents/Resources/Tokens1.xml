<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/BXU.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/BXU</TokenIdentifier>
			<Abstract type="html">BXU offers some generic functionality like setting the ContactDataSource to use through the framework, to show incoming message banners and deletion of cache pictures.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
            
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BXU/init</TokenIdentifier>
			<Abstract type="html">Unavailable init</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>- (instancetype)init</Declaration>
			
			<ReturnValue><Abstract type="html">a new instance of the class.</Abstract></ReturnValue>
			<Anchor>//api/name/init</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/contactSource</TokenIdentifier>
			<Abstract type="html">Gets the current BXUContactSource object.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (nullable id&lt;BXUContactSource&gt;)contactSource</Declaration>
			
			<ReturnValue><Abstract type="html">contact source object.</Abstract></ReturnValue>
			<Anchor>//api/name/contactSource</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/setContactSource:</TokenIdentifier>
			<Abstract type="html">Sets the current BXUContactSource object to use through the framework.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (void)setContactSource:(nullable id&lt;BXUContactSource&gt;)contactDataSource</Declaration>
			<Parameters>
				<Parameter>
					<Name>contactDataSource</Name>
					<Abstract type="html">contact source object to set.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setContactSource:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/displayNameForAddress:</TokenIdentifier>
			<Abstract type="html">Returns the display name for an specified identity. If no contact is provided for the identity in the +[BXU contactSource] then a default display name will be generated.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/BXU/contactSource</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (NSString *)displayNameForAddress:(Bit6Address *)address</Declaration>
			<Parameters>
				<Parameter>
					<Name>address</Name>
					<Abstract type="html">identity to search for an display name.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">display name for the identity.</Abstract></ReturnValue>
			<Anchor>//api/name/displayNameForAddress:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/initialsForAddress:</TokenIdentifier>
			<Abstract type="html">Returns the name initials for an specified identity.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/BXU/displayNameForAddress:</TokenIdentifier>
		<TokenIdentifier>//apple_ref/occ/clm/BXU/contactSource</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (NSString *)initialsForAddress:(Bit6Address *)address</Declaration>
			<Parameters>
				<Parameter>
					<Name>address</Name>
					<Abstract type="html">identity to search for the name initials.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">name initials for the identity.</Abstract></ReturnValue>
			<Anchor>//api/name/initialsForAddress:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/displayImageURLForAddress:</TokenIdentifier>
			<Abstract type="html">Returns the image URL for an specified identity.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/clm/BXU/contactSource</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (nullable NSURL *)displayImageURLForAddress:(Bit6Address *)address</Declaration>
			<Parameters>
				<Parameter>
					<Name>address</Name>
					<Abstract type="html">identity to search for the image URL.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">image URL for the identity.</Abstract></ReturnValue>
			<Anchor>//api/name/displayImageURLForAddress:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/clearProfilePictures</TokenIdentifier>
			<Abstract type="html">Deletes the profile pictures from cache.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (NSUInteger)clearProfilePictures</Declaration>
			
			<ReturnValue><Abstract type="html">number of files deleted.</Abstract></ReturnValue>
			<Anchor>//api/name/clearProfilePictures</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/clearProfilePictureForAddress:</TokenIdentifier>
			<Abstract type="html">Deletes an identity profile picture from cache.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (BOOL)clearProfilePictureForAddress:(Bit6Address *)address</Declaration>
			<Parameters>
				<Parameter>
					<Name>address</Name>
					<Abstract type="html">identity of the profile picture to delete.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the file was deleted from cache.</Abstract></ReturnValue>
			<Anchor>//api/name/clearProfilePictureForAddress:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/showNotificationFrom:message:tappedHandler:</TokenIdentifier>
			<Abstract type="html">Shows a incoming message notification banner.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (void)showNotificationFrom:(Bit6Address *)from message:(NSString *)message tappedHandler:(nullable void ( ^ ) ( Bit6Address *_Nullable from ))tappedHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>from</Name>
					<Abstract type="html">identity to use as the sender of the message.</Abstract>
				</Parameter><Parameter>
					<Name>message</Name>
					<Abstract type="html">message to show in the banner</Abstract>
				</Parameter><Parameter>
					<Name>tappedHandler</Name>
					<Abstract type="html">handler to execute if the banner is tapped</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/showNotificationFrom:message:tappedHandler:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/callMediaMode</TokenIdentifier>
			<Abstract type="html">The current call media mode.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (Bit6CallMediaMode)callMediaMode</Declaration>
			
			
			<Anchor>//api/name/callMediaMode</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/setCallMediaMode:</TokenIdentifier>
			<Abstract type="html">Indicates if the calls will go P2P or if the server should process the media.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (void)setCallMediaMode:(Bit6CallMediaMode)callMediaMode</Declaration>
			<Parameters>
				<Parameter>
					<Name>callMediaMode</Name>
					<Abstract type="html">P2P or MIX to process the calls media in the server.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCallMediaMode:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/enableAudioCalls</TokenIdentifier>
			<Abstract type="html">The current configuration for audio calls support.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (BOOL)enableAudioCalls</Declaration>
			
			<ReturnValue><Abstract type="html">YES if audio calls are enabled.</Abstract></ReturnValue>
			<Anchor>//api/name/enableAudioCalls</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/setEnableAudioCalls:</TokenIdentifier>
			<Abstract type="html">Used to configure the support for audio streams in the calls.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (void)setEnableAudioCalls:(BOOL)enable</Declaration>
			<Parameters>
				<Parameter>
					<Name>enable</Name>
					<Abstract type="html">YES if audio streams should be available during the calls.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setEnableAudioCalls:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/enableVideoCalls</TokenIdentifier>
			<Abstract type="html">The current configuration for video calls support.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (BOOL)enableVideoCalls</Declaration>
			
			<ReturnValue><Abstract type="html">YES if video calls are enabled.</Abstract></ReturnValue>
			<Anchor>//api/name/enableVideoCalls</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/setEnableVideoCalls:</TokenIdentifier>
			<Abstract type="html">Used to configure the support for video streams in the calls.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (void)setEnableVideoCalls:(BOOL)enable</Declaration>
			<Parameters>
				<Parameter>
					<Name>enable</Name>
					<Abstract type="html">YES if video streams should be available during the calls.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setEnableVideoCalls:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/enableCallsWithData</TokenIdentifier>
			<Abstract type="html">The current configuration for data transfers during a call.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (BOOL)enableCallsWithData</Declaration>
			
			<ReturnValue><Abstract type="html">YES if data transfer should be enabled in the calls.</Abstract></ReturnValue>
			<Anchor>//api/name/enableCallsWithData</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/setEnableCallsWithData:</TokenIdentifier>
			<Abstract type="html">Used to configure the support for data transfers in the calls.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (void)setEnableCallsWithData:(BOOL)enable</Declaration>
			<Parameters>
				<Parameter>
					<Name>enable</Name>
					<Abstract type="html">YES if data transfers should be available during the calls.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setEnableCallsWithData:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/BXU/availableStreamsIn:</TokenIdentifier>
			<Abstract type="html">Convenient method to get the enabled streams in Bit6UI framework from a given streams param.</Abstract>
			<DeclaredIn>BXU.h</DeclaredIn>
			
			<Declaration>+ (Bit6CallStreams)availableStreamsIn:(Bit6CallStreams)streams</Declaration>
			<Parameters>
				<Parameter>
					<Name>streams</Name>
					<Abstract type="html">the list of streams we want to compare.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the enabled streams in the given streams param.</Abstract></ReturnValue>
			<Anchor>//api/name/availableStreamsIn:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
        
	</File>
</Tokens>