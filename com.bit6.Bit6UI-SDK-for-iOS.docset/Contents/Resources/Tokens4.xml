<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/BXUCircleButton.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/BXUCircleButton</TokenIdentifier>
			<Abstract type="html">Convenience subclass of UIButton with an ON-OFF status displayed as a circle. To be used in storyboards</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
            
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BXUCircleButton/setOn:</TokenIdentifier>
			<Abstract type="html">The ON/OFF status of the button.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL on</Declaration>
			
			
			<Anchor>//api/name/on</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BXUCircleButton/on</TokenIdentifier>
			<Abstract type="html">The ON/OFF status of the button.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL on</Declaration>
			
			
			<Anchor>//api/name/on</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BXUCircleButton/on</TokenIdentifier>
			<Abstract type="html">The ON/OFF status of the button.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) BOOL on</Declaration>
			
			
			<Anchor>//api/name/on</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BXUCircleButton/setDisableColor:</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is not enabled.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *disableColor</Declaration>
			
			
			<Anchor>//api/name/disableColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BXUCircleButton/disableColor</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is not enabled.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *disableColor</Declaration>
			
			
			<Anchor>//api/name/disableColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BXUCircleButton/disableColor</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is not enabled.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *disableColor</Declaration>
			
			
			<Anchor>//api/name/disableColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BXUCircleButton/setOnColor:</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is set to ON.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *onColor</Declaration>
			
			
			<Anchor>//api/name/onColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BXUCircleButton/onColor</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is set to ON.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *onColor</Declaration>
			
			
			<Anchor>//api/name/onColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BXUCircleButton/onColor</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is set to ON.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *onColor</Declaration>
			
			
			<Anchor>//api/name/onColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BXUCircleButton/setHighlightedColor:</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is highlighted.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *highlightedColor</Declaration>
			
			
			<Anchor>//api/name/highlightedColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BXUCircleButton/highlightedColor</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is highlighted.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *highlightedColor</Declaration>
			
			
			<Anchor>//api/name/highlightedColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BXUCircleButton/highlightedColor</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is highlighted.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *highlightedColor</Declaration>
			
			
			<Anchor>//api/name/highlightedColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BXUCircleButton/setDefaulBackgroundColor:</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is enabled but set to OFF.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *defaulBackgroundColor</Declaration>
			
			
			<Anchor>//api/name/defaulBackgroundColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BXUCircleButton/defaulBackgroundColor</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is enabled but set to OFF.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *defaulBackgroundColor</Declaration>
			
			
			<Anchor>//api/name/defaulBackgroundColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BXUCircleButton/defaulBackgroundColor</TokenIdentifier>
			<Abstract type="html">Color to be used when the button is enabled but set to OFF.</Abstract>
			<DeclaredIn>BXUButtons.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) UIColor *defaulBackgroundColor</Declaration>
			
			
			<Anchor>//api/name/defaulBackgroundColor</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
        
	</File>
</Tokens>